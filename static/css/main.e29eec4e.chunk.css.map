{"version":3,"sources":["app.scss","breakpoints.scss"],"names":[],"mappings":"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","file":"main.e29eec4e.chunk.css","sourcesContent":["@import \"./breakpoints.scss\";\r\n\r\n// variables\r\n\r\n$white: #fff;\r\n$black: #000;\r\n$gray: #9e9e9e;\r\n$light-white: #f2f2f2;\r\n$light-black: #6e6e6e;\r\n$vh-mobile: calc(var(--vh, 1vh) * 100);\r\n// fonts\r\n\r\n@font-face {\r\n\tfont-family: \"TT Commons\";\r\n\tsrc: url(\"../fonts/TTCommons-Regular.woff\") format(\"woff\");\r\n\tfont-weight: 400;\r\n}\r\n\r\n@font-face {\r\n\tfont-family: \"TT Commons\";\r\n\tsrc: url(\"../fonts/TTCommons-Bold.woff\") format(\"woff\");\r\n\tfont-weight: 600;\r\n}\r\n\r\n@font-face {\r\n\tfont-family: \"TT Commons\";\r\n\tsrc: url(\"../fonts/TTCommons-Medium.woff\") format(\"woff\");\r\n\tfont-weight: 800;\r\n}\r\n\r\n@font-face {\r\n\tfont-family: \"TT Commons\";\r\n\tsrc: url(\"../fonts/TTCommons-ExtraBold.woff\") format(\"woff\");\r\n\tfont-weight: 900;\r\n}\r\n\r\n// main styles\r\nbody,\r\nhtml {\r\n\tposition: relative;\r\n\tbackground: $black;\r\n\toverscroll-behavior: none;\r\n\tmargin: 0;\r\n\tfont-family: \"TT Commons\";\r\n\t-webkit-font-smoothing: antialiased;\r\n\t-moz-osx-font-smoothing: grayscale;\r\n\toverflow-x: hidden;\r\n}\r\n\r\n*::-webkit-scrollbar {\r\n\twidth: 5px;\r\n\tdisplay: none;\r\n}\r\n\r\n*::-webkit-scrollbar-track {\r\n\tbackground-color: $white;\r\n\tdisplay: none;\r\n}\r\n\r\n*::-webkit-scrollbar-thumb {\r\n\tbackground-color: $black;\r\n\toutline: 1px solid $black;\r\n\tdisplay: none;\r\n}\r\n\r\n* {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n}\r\n\r\n.container {\r\n\twidth: 1226px;\r\n\tmin-width: 1226px;\r\n\tmargin: 0 auto;\r\n\theight: 100%;\r\n\t@include media(\"<=desktop\") {\r\n\t\twidth: 1080px;\r\n\t\tmin-width: 1080px;\r\n\t}\r\n\t@include media(\"<=1080px\") {\r\n\t\twidth: 100%;\r\n\t\tmin-width: 100%;\r\n\t}\r\n\t.row {\r\n\t\tdisplay: flex;\r\n\t\theight: 100%;\r\n\t\tpadding: 0 32px;\r\n\t\t@include media(\"<=phone\") {\r\n\t\t\tpadding: 0 16px;\r\n\t\t}\r\n\t}\r\n\t.v-center {\r\n\t\talign-items: center;\r\n\t}\r\n\t.space-between {\r\n\t\tjustify-content: space-between;\r\n\t}\r\n}\r\n\r\n.container-fluid {\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\t.row {\r\n\t\tdisplay: flex;\r\n\t\theight: 100%;\r\n\t}\r\n}\r\n\r\nmain.content {\r\n\tposition: relative;\r\n\theight: 100%;\r\n\tz-index: 2;\r\n\tbackground: $white;\r\n\t.section-content {\r\n\t\tposition: relative;\r\n\t\tz-index: 2;\r\n\t\t.enable-scroll {\r\n\t\t\theight: $vh-mobile;\r\n\t\t\toverflow-y: scroll;\r\n\t\t\toverflow-x: hidden;\r\n\t\t\tscroll-snap-type: y mandatory;\r\n\t\t\t.p-section {\r\n\t\t\t\tscroll-snap-align: start;\r\n\t\t\t\theight: $vh-mobile;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\t&.active {\r\n\t\t\t\t\topacity: 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.logo {\r\n\tposition: fixed;\r\n\tz-index: 3;\r\n\ttop: 86px;\r\n\tleft: 30px;\r\n\ttransform: rotate(90deg) scale(-1, -1);\r\n\r\n\t@include media(\"<=SMdesktop\") {\r\n\t\tleft: 0;\r\n\t\ttop: 55px;\r\n\t}\r\n\t@include media(\"<=phone\") {\r\n\t\topacity: 0;\r\n\t}\r\n\tpath {\r\n\t\tfill: $black;\r\n\t}\r\n}\r\n\r\n.ham-menu {\r\n\tposition: fixed;\r\n\tz-index: 3;\r\n\tright: 63px;\r\n\ttop: 52px;\r\n\tcursor: pointer;\r\n\tmix-blend-mode: difference;\r\n\r\n\t@include media(\"<=phone\") {\r\n\t\tright: 30px;\r\n\t\ttop: 30px;\r\n\t}\r\n\t.line {\r\n\t\tbackground: #fff;\r\n\t\twidth: 36px;\r\n\t\theight: 5px;\r\n\t\tdisplay: block;\r\n\t\tborder-radius: 26px;\r\n\t\tmargin-bottom: 5px;\r\n\t\t&:last-child {\r\n\t\t\twidth: 26px;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.created {\r\n\tposition: fixed;\r\n\tz-index: 3;\r\n\tbottom: 25px;\r\n\tleft: 63px;\r\n\tcolor: #fff;\r\n\tmix-blend-mode: difference;\r\n\r\n\t@include media(\"<=SMdesktop\") {\r\n\t\tleft: 30px;\r\n\t}\r\n\t@include media(\"<=phone\") {\r\n\t\tdisplay: none;\r\n\t}\r\n\tp {\r\n\t\tfont-weight: 900;\r\n\t\ttext-transform: uppercase;\r\n\t}\r\n}\r\n\r\n.menu {\r\n\tposition: fixed;\r\n\tz-index: 3;\r\n\tbackground: #fff;\r\n\twidth: 100%;\r\n\theight: calc(var(--vh, 1vh) * 60);\r\n\ttop: 0;\r\n\ttransform: translateY(calc(var(--vh, 1vh) * -60));\r\n\r\n\t@include media(\"<=phone\") {\r\n\t\theight: calc(var(--vh, 1vh) * 70);\r\n\t\ttransform: translateY(calc(var(--vh, 1vh) * -70));\r\n\t}\r\n\t.m-j-center {\r\n\t\t// justify-content: center;\r\n\t}\r\n\t.has-follow {\r\n\t\tposition: relative;\r\n\t}\r\n\t.menu-content {\r\n\t\twidth: 100%;\r\n\t\tdisplay: flex;\r\n\t\t.menu-wrapper {\r\n\t\t\tdisplay: flex;\r\n\t\t\tflex-wrap: nowrap;\r\n\t\t\twidth: 50%;\r\n\t\t\t.menu-items {\r\n\t\t\t\tmargin: auto;\r\n\t\t\t\tul {\r\n\t\t\t\t\tlist-style: none;\r\n\t\t\t\t\tli {\r\n\t\t\t\t\t\tmargin-bottom: 32px;\r\n\t\t\t\t\t\ta {\r\n\t\t\t\t\t\t\tcolor: $black;\r\n\t\t\t\t\t\t\ttext-decoration: none;\r\n\t\t\t\t\t\t\tfont-size: 34px;\r\n\t\t\t\t\t\t\tfont-weight: 900;\r\n\t\t\t\t\t\t\tfont-size: 48px;\r\n\r\n\t\t\t\t\t\t\t@include media(\"<=tablet\") {\r\n\t\t\t\t\t\t\t\tfont-size: 38px;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t@include media(\"<=phone\") {\r\n\t\t\t\t\t\t\t\tfont-size: 30px;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t.menu-social {\r\n\t\t\tmargin: 0 auto;\r\n\t\t\th3 {\r\n\t\t\t\tcolor: #939393;\r\n\t\t\t\tfont-weight: 600;\r\n\t\t\t\tmargin-bottom: 12px;\r\n\t\t\t\tfont-size: 36px;\r\n\t\t\t}\r\n\t\t\tul {\r\n\t\t\t\tlist-style: none;\r\n\t\t\t\tli {\r\n\t\t\t\t\twidth: 32px;\r\n\t\t\t\t\tmargin-bottom: 24px;\r\n\t\t\t\t\tsvg {\r\n\t\t\t\t\t\tpath {\r\n\t\t\t\t\t\t\tfill: #000;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.scroll-number {\r\n\tposition: fixed;\r\n\tbottom: 20%;\r\n\tz-index: 2;\r\n\tright: -20px;\r\n\ttransform: scale(1) rotate(90deg);\r\n\r\n\t@include media(\"<=SMdesktop\") {\r\n\t\ttransform: unset;\r\n\t\tbottom: 30px;\r\n\t\tright: 30px;\r\n\t}\r\n\t.counter {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tfont-weight: 600;\r\n\t\tfont-size: 18px;\r\n\t\theight: 15px;\r\n\t\tletter-spacing: 0.22px;\r\n\t\tcolor: #000;\r\n\r\n\t\t@include media(\"<=phone\") {\r\n\t\t\tfont-size: 16px;\r\n\t\t\theight: 8px;\r\n\t\t}\r\n\r\n\t\tdiv.length {\r\n\t\t\twidth: 150px;\r\n\t\t\theight: 2px;\r\n\t\t\tbackground: $gray;\r\n\t\t\tmargin: 0 8px;\r\n\t\t\tmargin-top: -5px;\r\n\t\t\tposition: relative;\r\n\r\n\t\t\tspan {\r\n\t\t\t\tbackground: $black;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\ttop: 0;\r\n\t\t\t\theight: 100%;\r\n\t\t\t\ttransition: all ease-in-out 0.3s;\r\n\t\t\t\ttransition-timing-function: cubic-bezier(0,.39,.53,1.03);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n.blinds {\r\n\topacity: 0.1;\r\n\ttop: 0;\r\n\tposition: absolute;\r\n\theight: 100%;\r\n\twidth: 1366px;\r\n\tz-index: -1;\r\n\toverflow: hidden;\r\n\r\n\t&::before {\r\n\t\tcontent: \"\";\r\n\t\tbackground: transparent;\r\n\t\twidth: 272px;\r\n\t\theight: 100%;\r\n\t\tposition: absolute;\r\n\t\tborder-left: 1px solid #000;\r\n\t\tleft: 0%;\r\n\t}\r\n\r\n\t&::after {\r\n\t\tcontent: \"\";\r\n\t\tbackground: transparent;\r\n\t\twidth: 272px;\r\n\t\theight: 100%;\r\n\t\tposition: absolute;\r\n\t\tborder-left: 1px solid #000;\r\n\t\tleft: calc(80% + 3px);\r\n\t}\r\n\t.blind {\r\n\t\tposition: absolute;\r\n\t\twidth: 276px;\r\n\t\theight: 100%;\r\n\t\tleft: calc(20% - 1px);\r\n\t\tbackground: transparent;\r\n\t\tborder-left: 1px solid #000;\r\n\r\n\t\t&:nth-child(2) {\r\n\t\t\tleft: calc(40% + 3px);\r\n\t\t}\r\n\t\t&:nth-child(3) {\r\n\t\t\tleft: calc(60% + 3px);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.s-number {\r\n\tfont-size: 22px;\r\n\tfont-weight: 700;\r\n\tline-height: 33px;\r\n\tletter-spacing: 0.22px;\r\n}\r\n\r\n.boxes {\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tz-index: -2;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\theight: $vh-mobile;\r\n\t.box {\r\n\t\twidth: 442px;\r\n\t\theight: 379px;\r\n\t\tbackground: $light-white;\r\n\t\tposition: absolute;\r\n\t\tborder-radius: 6px;\r\n\t}\r\n}\r\n\r\n.intro {\r\n\theight: 100vh;\r\n\theight: $vh-mobile;\r\n\tposition: relative;\r\n\r\n\t.p-intro {\r\n\t\twidth: 463px;\r\n\t\tposition: relative;\r\n\t\tleft: 97px;\r\n\r\n\t\t@include media(\"<=tablet\") {\r\n\t\t\tleft: 50px;\r\n\t\t}\r\n\t\t@include media(\"<=phone\") {\r\n\t\t\tleft: 0;\r\n\t\t}\r\n\t\th1 {\r\n\t\t\tfont-size: 57px;\r\n\t\t\tfont-weight: 900;\r\n\t\t\tletter-spacing: 0.07px;\r\n\t\t\tline-height: 53px;\r\n\t\t\t@include media(\"<=phone\") {\r\n\t\t\t\tfont-size: 37px;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tp.p-position {\r\n\t\t\tfont-size: 22px;\r\n\t\t\tfont-weight: 600;\r\n\t\t\ttext-transform: uppercase;\r\n\t\t\tletter-spacing: 0.22px;\r\n\t\t\tcolor: $light-black;\r\n\r\n\t\t\t@include media(\"<=phone\") {\r\n\t\t\t\tfont-size: 19px;\r\n\t\t\t}\r\n\t\t}\r\n\t\tp.p-description {\r\n\t\t\tfont-size: 20px;\r\n\t\t\tletter-spacing: 0.22px;\r\n\t\t\tline-height: 29px;\r\n\t\t\tmargin: 11px 0;\r\n\t\t\tmargin-top: 15px;\r\n\t\t\tcolor: $light-black;\r\n\r\n\t\t\t@include media(\"<=phone\") {\r\n\t\t\t\tfont-size: 18px;\r\n\t\t\t\tline-height: 26px;\r\n\t\t\t\tmargin-bottom: 15px;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ta {\r\n\t\t\ttext-decoration: none;\r\n\t\t\tcolor: $black;\r\n\t\t\tfont-weight: 600;\r\n\t\t\ttext-transform: uppercase;\r\n\t\t\tletter-spacing: 0.22px;\r\n\t\t}\r\n\t}\r\n\t.p-image {\r\n\t\twidth: max-content;\r\n\r\n\t\t@include media(\"<=tablet\") {\r\n\t\t\tposition: absolute;\r\n\t\t\tright: -127px;\r\n\t\t}\r\n\t\t@include media(\"<=phone\") {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\t\t.p-image-wrapper {\r\n\t\t\twidth: 476px;\r\n\t\t\theight: 438px;\r\n\t\t\toverflow: hidden;\r\n\t\t\tborder-radius: 6px;\r\n\t\t\tposition: relative;\r\n\r\n\t\t\timg {\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\twidth: 100%;\r\n\t\t\t\ttop: -134px;\r\n\t\t\t\tz-index: -1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.boxes {\r\n\t\t.box {\r\n\t\t\t&:nth-child(1) {\r\n\t\t\t\tleft: -284px;\r\n\t\t\t\ttop: 90px;\r\n\t\t\t\t@include media(\"<=phone\") {\r\n\t\t\t\t\tleft: -326px;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t&:nth-child(2) {\r\n\t\t\t\tright: -300px;\r\n\t\t\t\tbottom: 18px;\r\n\t\t\t\t@include media(\"<=phone\") {\r\n\t\t\t\t\tright: -368px;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.about {\r\n\theight: 100vh;\r\n\t.text-frame {\r\n\t\twidth: 100%;\r\n\t}\r\n\t.row {\r\n\t\tflex-wrap: wrap;\r\n\t\theight: auto;\r\n\t\t&.frame {\r\n\t\t\tmargin-bottom: 30px;\r\n\t\t}\r\n\t\t.heading {\r\n\t\t\t@include media(\"<=SMdesktop\") {\r\n\t\t\t\tflex-direction: column;\r\n\t\t\t}\r\n\t\t\t.a-left {\r\n\t\t\t\t@include media(\"<=SMdesktop\") {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t.a-right {\r\n\t\t\t\t@include media(\"<=SMdesktop\") {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.a-paragraph {\r\n\t\t\t\t\t@include media(\"<=SMdesktop\") {\r\n\t\t\t\t\t\tmargin-top: 10px;\r\n\t\t\t\t\t\tline-height: 26px;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t.set {\r\n\t\t\t& .a-left {\r\n\t\t\t\t@include media(\"<=phone\") {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t@include media(\"<=tablet\") {\r\n\t\t\t\tflex-wrap: nowrap;\r\n\t\t\t}\r\n\t\t\t.a-left {\r\n\t\t\t\t@include media(\"<=tablet\") {\r\n\t\t\t\t\twidth: 50%;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t.a-right {\r\n\t\t\t\t@include media(\"<=tablet\") {\r\n\t\t\t\t\tmargin: auto;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.row-fluid {\r\n\t\tpadding: 0;\r\n\t\theight: 100%;\r\n\t}\r\n\t.a-left {\r\n\t\twidth: 16%;\r\n\t\t.a-title {\r\n\t\t\tfont-size: 57px;\r\n\t\t\tfont-weight: 900;\r\n\t\t\tletter-spacing: 0.07px;\r\n\t\t\tline-height: 53px;\r\n\t\t\t@include media(\"<=phone\") {\r\n\t\t\t\tfont-size: 37px;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.a-meta {\r\n\t\t\tfont-size: 22px;\r\n\t\t\tfont-weight: 600;\r\n\t\t\ttext-transform: uppercase;\r\n\t\t\tletter-spacing: 0.22px;\r\n\t\t\ttext-align: right;\r\n\t\t\tcolor: $light-black;\r\n\t\t\t@include media(\"<=SMdesktop\") {\r\n\t\t\t\ttext-align: left;\r\n\t\t\t}\r\n\t\t\t@include media(\"<=phone\") {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t.a-right {\r\n\t\twidth: 691px;\r\n\t\tmargin-left: auto;\r\n\t\t&.has-meta {\r\n\t\t\tdisplay: flex;\r\n\t\t\t.a-meta-data {\r\n\t\t\t\tmargin-right: 60px;\r\n\t\t\t\th3 {\r\n\t\t\t\t\tfont-size: 22px;\r\n\t\t\t\t\tfont-weight: 600;\r\n\t\t\t\t\ttext-transform: uppercase;\r\n\t\t\t\t\tletter-spacing: 0.22px;\r\n\t\t\t\t\tcolor: $light-black;\r\n\t\t\t\t}\r\n\t\t\t\tul {\r\n\t\t\t\t\tlist-style: none;\r\n\t\t\t\t\tli {\r\n\t\t\t\t\t\tfont-size: 18px;\r\n\t\t\t\t\t\tletter-spacing: 0.22px;\r\n\t\t\t\t\t\tline-height: 29px;\r\n\t\t\t\t\t\tcolor: $light-black;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t.a-paragraph {\r\n\t\t\tfont-size: 20px;\r\n\t\t\tletter-spacing: 0.22px;\r\n\t\t\tline-height: 29px;\r\n\t\t\tmargin-top: 32px;\r\n\t\t\tcolor: $light-black;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.projects {\r\n\theight: 100vh;\r\n\t.project-content {\r\n\t\theight: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\r\n\t\t@include media(\"<=SMdesktop\") {\r\n\t\t\tpadding: 0 30px;\r\n\t\t}\r\n\t\t.project-header {\r\n\t\t\tposition: relative;\r\n\t\t\tmargin-bottom: 20px;\r\n\t\t\th1 {\r\n\t\t\t\tfont-size: 57px;\r\n\t\t\t\tfont-weight: 900;\r\n\t\t\t\tletter-spacing: 0.07px;\r\n\t\t\t\tline-height: 53px;\r\n\t\t\t\tmargin-bottom: 5px;\r\n\t\t\t\t@include media(\"<=phone\") {\r\n\t\t\t\t\tfont-size: 37px;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t.project-slide {\r\n\t\t\tmargin-bottom: 30px;\r\n\t\t\t// -webkit-overflow-scrolling: touch;\r\n\t\t\t// // width: max-content;\r\n\t\t\t// overflow-x: auto;\r\n\t\t\t.project-cards {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\ttransform: translate3d(0,0,0);\r\n\t\t\t\t// display: flex;\r\n\t\t\t\t// flex-wrap: nowrap;\r\n\t\t\t\t// width: max-content;\r\n\t\t\t\t.p-card {\r\n\t\t\t\t\t// flex: 0 0 auto;\r\n\t\t\t\t\t// margin-right: 16px;\r\n\t\t\t\t\twidth: max-content;\r\n\t\t\t\t\t.p-card-wrapper {\r\n\t\t\t\t\t\tposition: relative;\r\n\t\t\t\t\t\t.p-img {\r\n\t\t\t\t\t\t\twidth: 358px;\r\n\t\t\t\t\t\t\theight: 358px;\r\n\t\t\t\t\t\t\tposition: relative;\r\n\t\t\t\t\t\t\toverflow: hidden;\r\n\t\t\t\t\t\t\tborder-radius: 6px;\r\n\t\t\t\t\t\t\t@include media(\"<=phone\") {\r\n\t\t\t\t\t\t\t\twidth: 309px;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\timg {\r\n\t\t\t\t\t\t\t\theight: 100%;\r\n\t\t\t\t\t\t\t\tleft: -25%;\r\n\t\t\t\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t.p-card-details {\r\n\t\t\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\t\t\theight: auto;\r\n\t\t\t\t\t\t\tbottom: 0;\r\n\t\t\t\t\t\t\tpadding: 16px;\r\n\t\t\t\t\t\t\tcolor: $white;\r\n\t\t\t\t\t\t\t.p-card-title {\r\n\t\t\t\t\t\t\t\tfont-weight: 600;\r\n\t\t\t\t\t\t\t\tfont-size: 22px;\r\n\t\t\t\t\t\t\t\tletter-spacing: 0.22px;\r\n\t\t\t\t\t\t\t\ttext-transform: uppercase;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t.p-card-build {\r\n\t\t\t\t\t\t\t\tfont-size: 16px;\r\n\t\t\t\t\t\t\t\tletter-spacing: 0.22px;\r\n\t\t\t\t\t\t\t\ttext-transform: uppercase;\r\n\t\t\t\t\t\t\t\tmargin-top: 8px;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.contact {\r\n\tbackground-color: $black;\r\n\theight: 40vh;\r\n\tposition: fixed;\r\n\tz-index: 1;\r\n\tbottom: 0;\r\n\twidth: 100%;\r\n\t@include media(\"<=phone\") {\r\n\t\theight: calc(var(--vh, 1vh) * 40);\r\n\t}\r\n\t.j-center {\r\n\t\tjustify-content: center;\r\n\t}\r\n\t.c-content {\r\n\t\th1 {\r\n\t\t\tfont-size: 36px;\r\n\t\t\tmargin-bottom: 8px;\r\n\t\t\tcolor: #939393;\r\n\t\t\tfont-weight: 600;\r\n\t\t\t@include media(\"<=phone\") {\r\n\t\t\t\tfont-size: 29px;\r\n\t\t\t}\r\n\t\t\t@include media(\"<=iphone\") {\r\n\t\t\t\tfont-size: 23px;\r\n\t\t\t}\r\n\t\t}\r\n\t\ta {\r\n\t\t\tfont-size: 45px;\r\n\t\t\ttext-decoration: none;\r\n\t\t\tcolor: #fff;\r\n\t\t\tfont-weight: 900;\r\n\t\t\tletter-spacing: 1.37px;\r\n\t\t\t@include media(\"<=tablet\") {\r\n\t\t\t\tfont-size: 36px;\r\n\t\t\t}\r\n\t\t\t@include media(\"<=phone\") {\r\n\t\t\t\tfont-size: 26px;\r\n\t\t\t}\r\n\t\t\t@include media(\"<=iphone\") {\r\n\t\t\t\tfont-size: 22px;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.intro-overlay {\r\n\tbackground-color: $white;\r\n\tz-index: 10;\r\n\twidth: 100%;\r\n\tposition: absolute;\r\n\theight: $vh-mobile;\r\n\ttop: 0;\r\n\t.intro-content {\r\n\t\twidth: 100%;\r\n\t\th1 {\r\n\t\t\tfont-size: 56px;\r\n\t\t\tfont-weight: 600;\r\n\t\t\t.intro-line {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\toverflow: hidden;\r\n\t\t\t\theight: max-content;\r\n\t\t\t\tmin-height: 52px;\r\n\t\t\t\tmargin-bottom: 8px;\r\n\t\t\t\tspan {\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\theight: auto;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","$breakpoints: (\r\n\t\"iphone\": 375px,\r\n\t\"phone\": 425px,\r\n\t\"tablet\": 768px,\r\n\t\"SMdesktop\": 1024px,\r\n\t\"desktop\": 1366px,\r\n\t\"LGdesktop\": 1920px,\r\n) !default;\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///\t\t'retina2x': (\r\n///\t\t\t'(-webkit-min-device-pixel-ratio: 2)',\r\n///\t\t\t'(min-resolution: 192dpi)'\r\n///\t\t)\r\n///\t);\r\n///\r\n$media-expressions: (\r\n\t\"screen\": \"screen\",\r\n\t\"print\": \"print\",\r\n\t\"handheld\": \"handheld\",\r\n\t\"retina2x\": (\r\n\t\t\"(-webkit-min-device-pixel-ratio: 2)\",\r\n\t\t\"(min-resolution: 192dpi)\",\r\n\t),\r\n\t\"retina3x\": (\r\n\t\t\"(-webkit-min-device-pixel-ratio: 3)\",\r\n\t\t\"(min-resolution: 350dpi)\",\r\n\t),\r\n) !default;\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media(\">128px\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media(\">20em\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media(\">2.0rem\") {}\r\n///\r\n///\t /* Generates: */\r\n///\t @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n\t\"px\": 1,\r\n\t\"em\": 0.01,\r\n\t\"rem\": 0.1,\r\n) !default;\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {List}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media(\">phone\") { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media(\">phone\", \"<=tablet\") { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media(\">=358px\", \"<850px\") { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media(\">desktop\", \"<=1350px\") { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media(\"retina2x\") { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media(\">=350px\", \"<tablet\", \"retina3x\") { }\r\n///\r\n@mixin media($conditions...) {\r\n\t@for $i from 1 through length($conditions) {\r\n\t\t$conditions: set-nth(\r\n\t\t\t$conditions,\r\n\t\t\t$i,\r\n\t\t\tparse-expression(nth($conditions, $i))\r\n\t\t);\r\n\t}\r\n\r\n\t$branches: get-query-branches($conditions);\r\n\t$query: \"\";\r\n\r\n\t@each $branch in $branches {\r\n\t\t@if (str-length($query) != 0) {\r\n\t\t\t$query: $query + \", \";\r\n\t\t}\r\n\r\n\t\t$query: $query + $branch;\r\n\t}\r\n\r\n\t@media #{$query} {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n///\r\n/// Reads a list of media query expressions and separates logical disjunctions into different branches\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {List}   $expressions  - list of expressions\r\n///\r\n/// @throws `$expression` is not a valid expression\r\n///\r\n/// @return {List | Null}\r\n///\r\n@function get-query-branches($expressions) {\r\n\t$result: \"\";\r\n\t$has-groups: false;\r\n\r\n\t// Getting initial snapshot and looking for groups\r\n\t@each $expression in $expressions {\r\n\t\t@if (str-length($result) != 0) {\r\n\t\t\t$result: $result + \" and \";\r\n\t\t}\r\n\r\n\t\t@if (type-of($expression) == \"string\") {\r\n\t\t\t$result: $result + $expression;\r\n\t\t} @else if (type-of($expression) == \"list\") {\r\n\t\t\t$result: $result + nth($expression, 1);\r\n\t\t\t$has-groups: true;\r\n\t\t} @else {\r\n\t\t\t@warn '#{$expression} is not a valid expression.';\r\n\t\t}\r\n\t}\r\n\r\n\t// If we have groups, we have to create all possible combinations\r\n\t@if $has-groups {\r\n\t\t@each $expression in $expressions {\r\n\t\t\t@if (type-of($expression) == \"list\") {\r\n\t\t\t\t$first: nth($expression, 1);\r\n\r\n\t\t\t\t@each $member in $expression {\r\n\t\t\t\t\t@if ($member != $first) {\r\n\t\t\t\t\t\t@each $partial in $result {\r\n\t\t\t\t\t\t\t$result: join(\r\n\t\t\t\t\t\t\t\t$result,\r\n\t\t\t\t\t\t\t\tstr-replace-first($first, $member, $partial)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t@return $result;\r\n}\r\n\r\n///\r\n/// Parses a string to form a media query expression\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {String}   $expression  - expression (in string)\r\n///\r\n/// @throws Expression with type `type-of($expression)` detected, string expected\r\n/// @throws `$expression` is missing an operator\r\n/// @throws Unknown unit: `$unit`\r\n///\r\n/// @return {String | Null}\r\n///\r\n@function parse-expression($expression) {\r\n\t$operator: \"\";\r\n\t$value: \"\";\r\n\t$element: \"\";\r\n\t$result: \"\";\r\n\t$is-width: true;\r\n\r\n\t@if (type-of($expression) != \"string\") {\r\n\t\t@warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\r\n\t}\r\n\r\n\t// Separating the operator from the rest of the expression\r\n\t@if (str-slice($expression, 2, 2) == \"=\") {\r\n\t\t$operator: str-slice($expression, 1, 2);\r\n\t\t$value: str-slice($expression, 3);\r\n\t} @else {\r\n\t\t$operator: str-slice($expression, 1, 1);\r\n\t\t$value: str-slice($expression, 2);\r\n\t}\r\n\r\n\t// Checking what type of expression we're dealing with\r\n\t@if map-has-key($breakpoints, $value) {\r\n\t\t$result: map-get($breakpoints, $value);\r\n\t} @else if map-has-key($media-expressions, $expression) {\r\n\t\t$result: map-get($media-expressions, $expression);\r\n\t\t$is-width: false;\r\n\t} @else {\r\n\t\t$result: to-number($value);\r\n\t}\r\n\r\n\t@if ($is-width) {\r\n\t\t$unit: unit($result);\r\n\t\t$interval: 0;\r\n\r\n\t\t@if (map-has-key($unit-intervals, $unit)) {\r\n\t\t\t$interval: map-get($unit-intervals, $unit);\r\n\t\t} @else {\r\n\t\t\t@warn 'Unknown unit: #{$unit}';\r\n\t\t}\r\n\r\n\t\t@if ($operator == \">\") {\r\n\t\t\t$element: \"(min-width: #{$result + $interval})\";\r\n\t\t} @else if ($operator == \"<\") {\r\n\t\t\t$element: \"(max-width: #{$result - $interval})\";\r\n\t\t} @else if ($operator == \">=\") {\r\n\t\t\t$element: \"(min-width: #{$result})\";\r\n\t\t} @else if ($operator == \"<=\") {\r\n\t\t\t$element: \"(max-width: #{$result})\";\r\n\t\t} @else {\r\n\t\t\t@warn '#{$expression} is missing an operator.';\r\n\t\t}\r\n\t} @else {\r\n\t\t$element: $result;\r\n\t}\r\n\r\n\t@return $element;\r\n}\r\n\r\n///\r\n/// Replaces the first occurence of the string with the replacement string\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {String}   $search  - The value being searched for\r\n/// @param {String}   $replace  - The replacement string\r\n/// @param {String}   $subject  - The string being replaced on\r\n///\r\n/// @return {String | Null}\r\n///\r\n@function str-replace-first($search, $replace, $subject) {\r\n\t$search-start: str-index($subject, $search);\r\n\r\n\t@if $search-start == null {\r\n\t\t@return $subject;\r\n\t}\r\n\r\n\t$result: str-slice($subject, 0, $search-start - 1);\r\n\t$result: $result + $replace;\r\n\t$result: $result + str-slice($subject, $search-start + str-length($search));\r\n\r\n\t@return $result;\r\n}\r\n\r\n///\r\n/// Casts a number to a string\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @param {String}   $string  - Number to be parsed\r\n///\r\n/// @return {List | Null}\r\n///\r\n@function to-number($string) {\r\n\t// Matrices\r\n\t$strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\r\n\t$numbers: 0 1 2 3 4 5 6 7 8 9;\r\n\r\n\t// Result\r\n\t$result: 0;\r\n\t$divider: 0;\r\n\t$minus: false;\r\n\r\n\t// Looping through all characters\r\n\t@for $i from 1 through str-length($string) {\r\n\t\t$character: str-slice($string, $i, $i);\r\n\t\t$index: index($strings, $character);\r\n\r\n\t\t@if $character == \"-\" {\r\n\t\t\t$minus: true;\r\n\t\t} @else if $character == \".\" {\r\n\t\t\t$divider: 1;\r\n\t\t} @else {\r\n\t\t\t@if type-of($index) != \"number\" {\r\n\t\t\t\t$result: if($minus, $result * -1, $result);\r\n\t\t\t\t@return _length($result, str-slice($string, $i));\r\n\t\t\t}\r\n\r\n\t\t\t$number: nth($numbers, $index);\r\n\r\n\t\t\t@if $divider == 0 {\r\n\t\t\t\t$result: $result * 10;\r\n\t\t\t} @else {\r\n\t\t\t\t// Move the decimal dot to the left\r\n\t\t\t\t$divider: $divider * 10;\r\n\t\t\t\t$number: $number / $divider;\r\n\t\t\t}\r\n\r\n\t\t\t$result: $result + $number;\r\n\t\t}\r\n\t}\r\n\r\n\t@return if($minus, $result * -1, $result);\r\n}\r\n\r\n@function _length($number, $unit) {\r\n\t$strings: \"px\" \"cm\" \"mm\" \"%\" \"ch\" \"pica\" \"in\" \"em\" \"rem\" \"pt\" \"pc\" \"ex\" \"vw\"\r\n\t\t\"vh\" \"vmin\" \"vmax\";\r\n\t$units: 1px 1cm 1mm 1% 1ch 1pica 1in 1em 1rem 1pt 1pc 1ex 1vw 1vh 1vmin 1vmax;\r\n\t$index: index($strings, $unit);\r\n\r\n\t@if type-of($index) != \"number\" {\r\n\t\t@warn 'Unknown unit `#{$unit}`.';\r\n\t\t@return false;\r\n\t}\r\n\r\n\t@return $number * nth($units, $index);\r\n}\r\n"]}